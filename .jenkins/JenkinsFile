pipeline {
	agent any
  tools {
    nodejs "node17.4"
    }
	stages {
		stage("Install Dependencies") {
			steps{
				echo 'Installing dependencies'
        nodejs(nodeJSInstallationName: 'node17.4'){
           sh "npm install"
           }
			}
		}
		stage('Scanning Code With Sonarqube'){
			steps {
				script {
					def scannerHome = tool 'SonarQubeScanner-4.6.2';
					withSonarQubeEnv('sonarqube') {
					  sh "${scannerHome}/bin/sonar-scanner \
					  -D sonar.login=admin \
					  -D sonar.password=Smart@123 \
					  -D sonar.projectKey=smart-income-landing-test \
					  -D sonar.exclusions=vendor/**,resources/**,**/*.java \
					  -D sonar.host.url=http://20.100.1.35:9000/"
					}
				}
			}
		}
		stage("Build and Push Image") {
			steps {
				echo 'Compiling and building'
				script {
					docker.withRegistry('http://20.100.1.191:5000','registry') {
						def images = docker.build("smf/smartincome-test:v1.${BUILD_NUMBER}")
						images.push("v1.${BUILD_NUMBER}")
					}
				}
				sh "docker rmi -f \$(docker images smf/smartincome-test -q)"
			}
		}
		stage("Proceed Deployment?") {
			steps {
				script {
					input message: 'Deploy to production?', ok: 'Yes'
				}
			}
		}
		stage("Deploying To Production") {
			steps {
				sh "sed -i 's|<tag_placeholder>|v1.${BUILD_NUMBER}|g' .jenkins/playbook.yml"
				sh "ansible-playbook -i .jenkins/inventory.yml .jenkins/playbook.yml"
			}
		}
	}
}
